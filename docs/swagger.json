{
  "openapi": "3.0.0",
  "info": {
    "title": "Team Task 2 - Binar Academy",
    "version": "1.0.0",
    "description": "API with CRUD Operation and Auth function. This API is made to fulfill the task from kak Imam.",
    "contact": {
      "name": "Team Task 2",
      "email": "teamtask@gmail.com",
      "url": "https://jayajayajaya.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/ndikrp/team2-API-car-management/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Auths",
      "description": "API pada resources auth"
    },
    {
      "name": "Cars",
      "description": "API pada resources car"
    },
    {
      "name": "Rentals",
      "description": "API pada resources rental"
    },
    {
      "name": "Details",
      "description": "API pada resources detail"
    },
    {
      "name": "Users",
      "description": "API pada resources user"
    }
  ],
  "servers": [
    {
      "description": "Car Management API",
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UnauthorizedMsg": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "Missing required fields"
          }
        }
      },
      "LoginCred": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "new@account.com"
          },
          "role": {
            "type": "string",
            "enum": ["Admin", "Manager", "Staff"]
          },
          "token": {
            "type": "string",
            "format": "token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJtZW1iZXJAbWVtYmVyLmNvbSIsImNyZWF0ZWRBdCI6IjIwMjItMTAtMThUMDY6MzA6NTguOTg3WiIsInVwZGF0ZWRBdCI6IjIwMjItMTAtMThUMDY6MzA6NTguOTg3WiIsImlhdCI6MTY2NjA4MzEyOH0.k_SEHG41C-4cX4ruRRLOaLZqDZBNpTmMtYgGGw0XqAA"
          }
        }
      },
      "CarRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sample Car"
          },
          "rentPrice": {
            "type": "integer",
            "example": 50000
          },
          "image": {
            "type": "string",
            "example": "https://example.com/sample-car.png"
          }
        }
      },
      "CarResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "name": {
            "type": "string",
            "example": "Sample Car"
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "rentPrice": {
            "type": "integer",
            "example": 50000
          },
          "rentalId": {
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Rental 1"
              }
            },
            "image": {
              "type": "string",
              "example": "https://example.com/sample-car.png"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/rentals": {
      "get": {
        "tags": ["Rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Melihat semua data yang ada di resource rental",
        "description": "Melihat semua data yang ada di resource rental",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "totalData": {
                      "type": "number",
                      "example": 2
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rentals": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "id": 1,
                              "name": "Rental Rafli",
                              "city": "Makassar",
                              "createdAt": "2024-04-19T13:24:52.028Z",
                              "updatedAt": "2024-04-19T13:24:52.028Z"
                            },
                            {
                              "id": 2,
                              "name": "Rental Rendi",
                              "city": "Makassar",
                              "createdAt": "2024-04-19T13:24:52.028Z",
                              "updatedAt": "2024-04-19T13:24:52.028Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No Access / No Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token not found!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "JWT Malformed (Token tidak valid / tidak sesuai dengan format JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "jwt malformed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rental/{id}": {
      "get": {
        "tags": ["Rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Melihat data rental berdasarkan id pada resource rental",
        "description": "Melihat data rental berdasarkan id pada resource rental",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rental": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "Rental Rendi"
                            },
                            "city": {
                              "type": "string",
                              "example": "Makassar"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2024-04-19T13:24:52.028Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2024-04-19T13:24:52.028Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No Access / No Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token not found!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "JWT Malformed (Token tidak valid / tidak sesuai dengan format JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "jwt malformed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Mengupdate data rental berdasarkan id",
        "description": "Mengupdate data rental berdasarkan id",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nama rental"
                  },
                  "city": {
                    "type": "string",
                    "description": "Kota rental"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "example": 1
            },
            "description": "rental id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "updatedRental": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "Rafli Rental"
                            },
                            "city": {
                              "type": "string",
                              "example": "Makassar"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2024-04-19T13:24:52.028Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2024-04-19T13:24:52.028Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No Access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Akses anda tidak diterima. Role yang memiliki akses : Admin atau Manager"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No Request Body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Silahkan input data yang mau diubah"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all cars created by user",
        "operationId": "getAllCars",
        "description": "This request return list of car data created by the user \n\n Allowed roles: Admin, Manager, Staff",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get all cars success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CarResponse"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedMsg"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create new car data",
        "operationId": "createCar",
        "description": "Create and insert new car data to database \n\n Allowed roles: Admin, Manager",
        "requestBody": {
          "description": "Required fields [name, rentPrice, rentalId, image]",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "rentPrice", "rentalId", "image"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sample Car"
                  },
                  "rentPrice": {
                    "type": "integer",
                    "example": 50000
                  },
                  "rentalId": {
                    "type": "integer",
                    "example": 1
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Create car success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CarResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedMsg"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get car data by id",
        "operationId": "getCarById",
        "description": "Get car data based on the car ID \n\n Allowed roles: Admin, Manager, Staff",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Car ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Get car success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CarResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedMsg"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Car not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update car data",
        "operationId": "updateCar",
        "description": "Update car data based on the car ID \n\n Allowed roles: Admin, Manager",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Car ID"
          }
        ],
        "requestBody": {
          "description": "Required fields [name, rentPrice, image]",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Update car success"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, bearer token invalid or auth level belom manager",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedMsg"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete car data",
        "operationId": "deleteCar",
        "description": "Delete car data base on the car ID \n\n Allowed roles: Admin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Car ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Delete car data successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, bearer token invalid or auth level belom admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedMsg"
                }
              }
            }
          }
        }
      }
    }
  }
}
